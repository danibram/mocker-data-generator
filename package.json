{
  "name": "mocker-data-generator",
  "version": "2.6.5",
  "description": "A simplified way to generate mock data, builds using a simple schema and with the FakerJs",
  "main": "build/main/index.js",
  "typings": "build/main/index.d.ts",
  "module": "build/module/index.js",
  "repository": "https://github.com/danibram/mocker-data-generator",
  "keywords": [
    "mock",
    "data",
    "faker",
    "fakerjs",
    "chance",
    "chancejs",
    "casual",
    "randexp",
    "json",
    "fake",
    "mocks",
    "massive",
    "generator"
  ],
  "author": {
    "name": "Daniel Biedma Ramos",
    "email": "info@dbr.io",
    "url": "https://dbr.io"
  },
  "files": [
    "build/main/**/*",
    "build/module/**/*",
    "build/browser/**/*",
    "package.json",
    "README.md",
    "CHANGELOG.md",
    "LICENSE"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/danibram/mocker-data-generator/issues"
  },
  "scripts": {
    "info": "npm-scripts-info",
    "build": "trash build && tsc -p tsconfig.json && tsc -p config/tsconfig.module.json",
    "build:tests": "trash test && node config/exports/build-tests.js",
    "lint": "tslint src/**/*.ts",
    "unit": "npm run build && nyc ava",
    "check-coverage": "nyc check-coverage --lines 80 --functions 80 --branches 80",
    "test": "npm run unit && npm run check-coverage",
    "watch": "trash build && multiview [yarn watch:build] [yarn watch:unit]",
    "watch:build": "tsc -p tsconfig.json -w",
    "watch:unit": "tsc -p tsconfig.json && ava --watch --verbose",
    "cov": "npm run unit && npm run html-coverage && opn coverage/index.html",
    "html-coverage": "nyc report --reporter=html",
    "send-coverage": "nyc report --reporter=lcov > coverage.lcov && codecov",
    "docs": "typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs && opn build/docs/index.html",
    "docs:json": "typedoc --mode file --json build/docs/typedoc.json src/index.ts",
    "release": "standard-version",
    "release-github": "source .env.sh && conventional-github-releaser -p angular -r 1",
    "prett": "prettier 'src/**/*.ts' --write",
    "docs:dev": "cd _docs_website && next",
    "docs:serve:dev": "npm run run docs:build && npm run docs:start",
    "docs:build": "cd _docs_website && next build",
    "docs:start": "cd _docs_website && next start",
    "docs:examples": "node _docs_website/generateExamples.js",
    "docs:export:dev": "trash _docs_website/.next && trash _docs_website/out && npm run docs:examples && cd _docs_website && NODE_ENV=development next build && NODE_ENV=development next export && npm run docs:serve:prod",
    "docs:export": "trash _docs_website/.next && trash _docs_website/out && npm run docs:examples && cd _docs_website && NODE_ENV=production next build && next export && touch out/.nojekyll",
    "docs:serve:prod": "http-server _docs_website/out",
    "docs:deploy:gh-pages": "gh-pages -d _docs_website/out -b gh-pages -t"
  },
  "scripts-info": {
    "info": "Display information about the scripts",
    "build": "(Trash and re)build the library",
    "lint": "Lint all typescript source files",
    "unit": "Run unit tests",
    "test": "Lint and test the library",
    "watch": "Watch source files, rebuild library on changes, rerun relevant tests",
    "watch:build": "Watch source files, rebuild library on changes",
    "watch:unit": "Watch the build, rerun relevant tests on changes",
    "cov": "Run tests, generate the HTML coverage report, and open it in a browser",
    "html-coverage": "Output HTML test coverage report",
    "send-coverage": "Output lcov test coverage report and send it to codecov",
    "docs": "Generate API documentation and open it in a browser",
    "docs:json": "Generate API documentation in typedoc JSON format",
    "release": "Bump package.json version, update CHANGELOG.md, tag a release"
  },
  "devDependencies": {
    "@types/chance": "^1.0.0",
    "@types/faker": "^4.1.2",
    "@types/node": "^10.0.4",
    "ava": "^0.25.0",
    "codecov": "^3.0.1",
    "conventional-github-releaser": "^3.0.0",
    "gh-pages": "^2.0.0",
    "http-server": "^0.11.0",
    "multiview": "^2.5.3",
    "npm-scripts-info": "^0.3.7",
    "nyc": "^13.0.1",
    "opn-cli": "^3.1.0",
    "prettier": "^1.12.1",
    "standard-version": "^4.3.0",
    "trash-cli": "^1.4.0",
    "ts-node": "^7.0.0",
    "tslint": "^5.10.0",
    "tslint-config-standard": "^8.0.1",
    "typedoc": "^0.12.0",
    "typescript": "^3.0.3"
  },
  "dependencies": {
    "casual-browserify": "^1.5.19",
    "chance": "^1.0.16",
    "faker": "^4.1.0",
    "randexp": "^0.5.3",
    "tslib": "^1.9.0"
  },
  "nyc": {
    "exclude": [
      "**/*.spec.js",
      "**/array-includes.js"
    ]
  },
  "ava": {
    "files": [
      "build/main/**/*.spec.js",
      "!**/array-includes.js"
    ],
    "source": [
      "build/main/**/*"
    ]
  }
}
